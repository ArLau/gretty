buildscript {
  project.ext {
    if (has('privateRepoDir')) {
      privateRepoDir = privateRepoDir instanceof File ? privateRepoDir.path : privateRepoDir.toString()
      if (!new File(privateRepoDir).isAbsolute())
        privateRepoDir = new File(projectDir, privateRepoDir).canonicalPath
    } else
      privateRepoDir = new File(project.buildDir, 'privateRepo').canonicalPath
  }
}

import groovyx.net.http.ContentType

plugins {
  id 'base'
  id 'maven-publish'
}

apply plugin: "org.tenne.rest"

ext {
  project_website = "https://github.com/${developerId}/${projectId}"
  project_scm = "https://github.com/${developerId}/${projectId}.git"
  license_url = "https://raw.github.com/${developerId}/${projectId}/master/LICENSE"
}

task testAll(dependsOn: tasks.build)

task testAllIntegrationTests(type: GradleBuild) {
  dir = file('integrationTests')
  tasks = [ 'testAll' ]
  startParameter.projectProperties = [:]
  if (project.hasProperty('geckoDriverPlatform')) {
    startParameter.projectProperties.put('geckoDriverPlatform', project.geckoDriverPlatform)
  }
  if (project.hasProperty('geckoDriverVersion')) {
    startParameter.projectProperties.put('geckoDriverVersion', project.geckoDriverVersion)
  }
  if (project.hasProperty('seleniumVersion')) {
    startParameter.projectProperties.put('seleniumVersion', project.seleniumVersion)
  }
  if (project.hasProperty('gebVersion')) {
    startParameter.projectProperties.put('gebVersion', project.gebVersion)
  }
  if (project.hasProperty('testAllContainers')) {
    startParameter.projectProperties.put('testAllContainers', project.testAllContainers)
  }
  project.tasks.testAll.finalizedBy it
  onlyIf { !project.tasks.testAll.getState().getFailure() }
}

task cleanIntegrationTests() {
  doLast {
    def directoriesToDelete = []
    file('integrationTests').eachDirRecurse {
      if (it.name == 'build') {
        directoriesToDelete << it
      }
    }
    directoriesToDelete.each { it.deleteDir() }
  }
  project.tasks.clean.dependsOn it
}

ext.libs = [
  spock: dependencies.create("org.spockframework:spock-core:$spock_version") {
    exclude module: "groovy-all"
  }
]
