def topGradleProps = new Properties()
new File(projectDir, '../../gradle.properties').withInputStream {
  topGradleProps.load(it)
}
ext.topGradleProps = topGradleProps.asImmutable()

def parentGradleProps = new Properties()
new File(projectDir, '../gradle.properties').withInputStream {
  parentGradleProps.load(it)
}
ext.parentGradleProps = parentGradleProps.asImmutable()

topGradleProps.each { key, value ->
  if(key != 'group' && key != 'version' && key != 'rootProjectName')
    project.ext[key] = value
}

parentGradleProps.each { key, value ->
  if(key != 'group' && key != 'version' && key != 'rootProjectName')
    project.ext[key] = value
}

allprojects {
  group = rootProject.ext.parentGradleProps.group
  version = rootProject.ext.topGradleProps.version
}

subprojects {
  apply plugin: 'maven-publish'

  repositories {
    mavenCentral()
  }

  afterEvaluate {
    if(plugins.findPlugin('java')) {

      sourceCompatibility = JavaVersion.VERSION_11
      targetCompatibility = JavaVersion.VERSION_11

      [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

      publishing {
        publications {
          mavenJava(MavenPublication) {
            from components.java
          }
        }
      } // publishing
    } // findPlugin java
  } // afterEvaluate
} // subprojects
